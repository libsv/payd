// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"sync"

	"github.com/libsv/payd"
)

// Ensure, that TxoWriterMock does implement payd.TxoWriter.
// If this is not the case, regenerate this file with moq.
var _ payd.TxoWriter = &TxoWriterMock{}

// TxoWriterMock is a mock implementation of payd.TxoWriter.
//
// 	func TestSomethingThatUsesTxoWriter(t *testing.T) {
//
// 		// make and configure a mocked payd.TxoWriter
// 		mockedTxoWriter := &TxoWriterMock{
// 			UTXOReserveFunc: func(ctx context.Context, req payd.UTXOReserve) ([]payd.UTXO, error) {
// 				panic("mock out the UTXOReserve method")
// 			},
// 			UTXOSpendFunc: func(ctx context.Context, req payd.UTXOSpend) error {
// 				panic("mock out the UTXOSpend method")
// 			},
// 			UTXOUnreserveFunc: func(ctx context.Context, req payd.UTXOUnreserve) error {
// 				panic("mock out the UTXOUnreserve method")
// 			},
// 		}
//
// 		// use mockedTxoWriter in code that requires payd.TxoWriter
// 		// and then make assertions.
//
// 	}
type TxoWriterMock struct {
	// UTXOReserveFunc mocks the UTXOReserve method.
	UTXOReserveFunc func(ctx context.Context, req payd.UTXOReserve) ([]payd.UTXO, error)

	// UTXOSpendFunc mocks the UTXOSpend method.
	UTXOSpendFunc func(ctx context.Context, req payd.UTXOSpend) error

	// UTXOUnreserveFunc mocks the UTXOUnreserve method.
	UTXOUnreserveFunc func(ctx context.Context, req payd.UTXOUnreserve) error

	// calls tracks calls to the methods.
	calls struct {
		// UTXOReserve holds details about calls to the UTXOReserve method.
		UTXOReserve []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Req is the req argument value.
			Req payd.UTXOReserve
		}
		// UTXOSpend holds details about calls to the UTXOSpend method.
		UTXOSpend []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Req is the req argument value.
			Req payd.UTXOSpend
		}
		// UTXOUnreserve holds details about calls to the UTXOUnreserve method.
		UTXOUnreserve []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Req is the req argument value.
			Req payd.UTXOUnreserve
		}
	}
	lockUTXOReserve   sync.RWMutex
	lockUTXOSpend     sync.RWMutex
	lockUTXOUnreserve sync.RWMutex
}

// UTXOReserve calls UTXOReserveFunc.
func (mock *TxoWriterMock) UTXOReserve(ctx context.Context, req payd.UTXOReserve) ([]payd.UTXO, error) {
	if mock.UTXOReserveFunc == nil {
		panic("TxoWriterMock.UTXOReserveFunc: method is nil but TxoWriter.UTXOReserve was just called")
	}
	callInfo := struct {
		Ctx context.Context
		Req payd.UTXOReserve
	}{
		Ctx: ctx,
		Req: req,
	}
	mock.lockUTXOReserve.Lock()
	mock.calls.UTXOReserve = append(mock.calls.UTXOReserve, callInfo)
	mock.lockUTXOReserve.Unlock()
	return mock.UTXOReserveFunc(ctx, req)
}

// UTXOReserveCalls gets all the calls that were made to UTXOReserve.
// Check the length with:
//     len(mockedTxoWriter.UTXOReserveCalls())
func (mock *TxoWriterMock) UTXOReserveCalls() []struct {
	Ctx context.Context
	Req payd.UTXOReserve
} {
	var calls []struct {
		Ctx context.Context
		Req payd.UTXOReserve
	}
	mock.lockUTXOReserve.RLock()
	calls = mock.calls.UTXOReserve
	mock.lockUTXOReserve.RUnlock()
	return calls
}

// UTXOSpend calls UTXOSpendFunc.
func (mock *TxoWriterMock) UTXOSpend(ctx context.Context, req payd.UTXOSpend) error {
	if mock.UTXOSpendFunc == nil {
		panic("TxoWriterMock.UTXOSpendFunc: method is nil but TxoWriter.UTXOSpend was just called")
	}
	callInfo := struct {
		Ctx context.Context
		Req payd.UTXOSpend
	}{
		Ctx: ctx,
		Req: req,
	}
	mock.lockUTXOSpend.Lock()
	mock.calls.UTXOSpend = append(mock.calls.UTXOSpend, callInfo)
	mock.lockUTXOSpend.Unlock()
	return mock.UTXOSpendFunc(ctx, req)
}

// UTXOSpendCalls gets all the calls that were made to UTXOSpend.
// Check the length with:
//     len(mockedTxoWriter.UTXOSpendCalls())
func (mock *TxoWriterMock) UTXOSpendCalls() []struct {
	Ctx context.Context
	Req payd.UTXOSpend
} {
	var calls []struct {
		Ctx context.Context
		Req payd.UTXOSpend
	}
	mock.lockUTXOSpend.RLock()
	calls = mock.calls.UTXOSpend
	mock.lockUTXOSpend.RUnlock()
	return calls
}

// UTXOUnreserve calls UTXOUnreserveFunc.
func (mock *TxoWriterMock) UTXOUnreserve(ctx context.Context, req payd.UTXOUnreserve) error {
	if mock.UTXOUnreserveFunc == nil {
		panic("TxoWriterMock.UTXOUnreserveFunc: method is nil but TxoWriter.UTXOUnreserve was just called")
	}
	callInfo := struct {
		Ctx context.Context
		Req payd.UTXOUnreserve
	}{
		Ctx: ctx,
		Req: req,
	}
	mock.lockUTXOUnreserve.Lock()
	mock.calls.UTXOUnreserve = append(mock.calls.UTXOUnreserve, callInfo)
	mock.lockUTXOUnreserve.Unlock()
	return mock.UTXOUnreserveFunc(ctx, req)
}

// UTXOUnreserveCalls gets all the calls that were made to UTXOUnreserve.
// Check the length with:
//     len(mockedTxoWriter.UTXOUnreserveCalls())
func (mock *TxoWriterMock) UTXOUnreserveCalls() []struct {
	Ctx context.Context
	Req payd.UTXOUnreserve
} {
	var calls []struct {
		Ctx context.Context
		Req payd.UTXOUnreserve
	}
	mock.lockUTXOUnreserve.RLock()
	calls = mock.calls.UTXOUnreserve
	mock.lockUTXOUnreserve.RUnlock()
	return calls
}
