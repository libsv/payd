basePath: /api
definitions:
  envelope.JSONEnvelope:
    properties:
      encoding:
        type: string
      mimetype:
        type: string
      payload:
        type: string
      publicKey:
        type: string
      signature:
        type: string
    type: object
  payd.ClientError:
    properties:
      code:
        example: N01
        type: string
      id:
        example: e97970bf-2a88-4bc8-90e6-2f597a80b93d
        type: string
      message:
        example: unable to find foo when loading bar
        type: string
      title:
        example: not found
        type: string
    type: object
  payd.InvoiceCreate:
    properties:
      description:
        description: |-
          Description is an optional text field that can have some further info
          like 'invoice for oranges'.
          MaxLength is 1024 characters.
        type: string
      expiresAt:
        description: |-
          ExpiresAt is an optional param that can be passed to set an expiration
          date on an invoice, after which, payments will not be accepted.
        type: string
      reference:
        description: |-
          Reference is an identifier that can be used to link the
          payd invoice with an external system.
          MaxLength is 32 characters.
        type: string
      satoshis:
        description: Satoshis is the total amount this invoice is to pay.
        type: integer
    type: object
  payd.PayRequest:
    properties:
      payToURL:
        type: string
    type: object
  payd.User:
    properties:
      address:
        type: string
      avatar:
        type: string
      email:
        type: string
      extendedData:
        additionalProperties:
          type: string
        type: object
      id:
        type: integer
      name:
        type: string
      phoneNumber:
        type: string
    type: object
host: localhost:8443
info:
  contact: {}
  description: Payd is a txo and key manager, with a common interface that can be
    implemented by wallets.
  license:
    name: ISC
    url: https://github.com/libsv/payd/blob/master/LICENSE
  termsOfService: https://github.com/libsv/payd/blob/master/CODE_OF_CONDUCT.md
  title: Payd
  version: 0.0.1
paths:
  /v1/balance:
    get:
      consumes:
      - application/json
      description: Returns current balance, which is a sum of unspent txos
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Balance
      tags:
      - Balance
  /v1/destinations/{invoiceID}:
    get:
      consumes:
      - application/json
      description: Given an invoiceID, a set of outputs and fees will be returned,
        if not found a 404 is returned.
      parameters:
      - description: Invoice ID
        in: path
        name: invoiceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: returned if the invoiceID has not been found
          schema:
            $ref: '#/definitions/payd.ClientError'
      summary: Given an invoiceID, a set of outputs and fees will be returned, if
        not found a 404 is returned.
      tags:
      - Destinations
  /v1/invoices:
    get:
      consumes:
      - application/json
      description: Returns all invoices currently stored
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Invoices
      tags:
      - Invoices
    post:
      consumes:
      - application/json
      description: Creates an invoices with invoiceID and satoshis
      parameters:
      - description: Reference and Satoshis
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payd.InvoiceCreate'
      produces:
      - application/json
      responses:
        "201":
          description: ""
      summary: InvoiceCreate invoices
      tags:
      - Invoices
  /v1/invoices/{invoiceID}:
    delete:
      consumes:
      - application/json
      description: InvoiceDelete
      parameters:
      - description: invoiceID we want to remove
        in: path
        name: invoiceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: returned if the paymentID has not been found
          schema:
            $ref: '#/definitions/payd.ClientError'
      summary: InvoiceDelete invoices
      tags:
      - Invoices
    get:
      consumes:
      - application/json
      description: Returns invoices by invoices id if exists
      parameters:
      - description: Invoice ID
        in: path
        name: invoiceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Invoices
      tags:
      - Invoices
  /v1/owner:
    get:
      consumes:
      - application/json
      description: Returns information about the wallet owner
      produces:
      - application/json
      responses:
        "200":
          description: Current wallet owner
          schema:
            $ref: '#/definitions/payd.User'
      summary: Wallet owner information.
      tags:
      - Users
  /v1/pay:
    post:
      consumes:
      - application/json
      parameters:
      - description: Pay to url
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/payd.PayRequest'
      produces:
      - application/json
      responses:
        "201":
          description: ""
      summary: Make a payment
      tags:
      - Pay
  /v1/payments/{invoiceID}:
    post:
      consumes:
      - application/json
      description: Given an invoiceID, and an spvEnvelope, we will validate the payment
        and inputs used are valid and that it covers the invoice.
      parameters:
      - description: Invoice ID
        in: path
        name: invoiceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: returned if the invoiceID is empty or payment isn't valid
          schema:
            $ref: '#/definitions/payd.ClientError'
        "404":
          description: returned if the invoiceID has not been found
          schema:
            $ref: '#/definitions/payd.ClientError'
      summary: Validate and store a payment.
      tags:
      - Payments
  /v1/proofs/{txid}:
    post:
      consumes:
      - application/json
      description: Creates a json envelope proof
      parameters:
      - description: Transaction ID
        in: path
        name: txid
        required: true
        type: string
      - description: JSON Envelope
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/envelope.JSONEnvelope'
      produces:
      - application/json
      responses:
        "201":
          description: ""
      summary: InvoiceCreate proof
      tags:
      - Proofs
swagger: "2.0"
